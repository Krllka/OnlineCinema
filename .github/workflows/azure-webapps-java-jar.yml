# This workflow will build and push a Java application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-java?tabs=javase&pivots=platform-linux
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the JAVA_VERSION environment variable below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy JAR app to Azure Web App

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to the name of your Azure Web App
  JAVA_VERSION: '11'                  # set this to the Java version to use
  DISTRIBUTION: zulu                  # set this to the Java distribution

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  az-login-test:
     environment: Automation test
     runs-on: windows-latest
     steps:
       - name: Checkout from PR branch  
         uses: actions/checkout@v2
         with: 
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

         # Using 12.x version as an example
       - name: Set Node.js 12.x for GitHub Action
         uses: actions/setup-node@v1
         with:
           node-version: 12.x

       - name: installing node_modules
         run: npm install 

       - name: Build GitHub Action
         run: npm run build
         
       - name: 'Az CLI login with subscription'
         uses: ./
         with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
          
       - run: |
             az account show
  #          az webapp list

       - name: 'Az CLI login without subscription'
         uses: ./
         with:
           creds: ${{ secrets.AZURE_CREDENTIALS_NO_SUB }}
           allow-no-subscriptions: true

       - run: |
           az account show
       - name: 'Azure PowerShell login with subscription'
         uses: ./
         with:
           creds: ${{ secrets.AZURE_CREDENTIALS }}
           enable-AzPSSession: true

       - uses: azure/powershell@v1
         with:
           inlineScript: "Get-AzContext"
           azPSVersion: "latest"

       - name: 'Azure PowerShell login without subscription'
         uses: ./
         with:
           creds: ${{secrets.AZURE_CREDENTIALS_NO_SUB}}
           enable-AzPSSession: true
           allow-no-subscriptions: true

       - uses: azure/powershell@v1
         with:
           inlineScript: "Get-AzContext"
           azPSVersion: "latest"
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java version
        uses: actions/setup-java@v3.0.0
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.DISTRIBUTION }}
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean install

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.jar'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: java-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: '*.jar'
